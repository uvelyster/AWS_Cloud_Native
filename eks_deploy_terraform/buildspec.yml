version: 0.2
phases:
  install:
    runtime-versions:
        java: corretto17
    commands:
      - aws ecr get-login-password --region ap-northeast-1 | docker login --username AWS --password-stdin xxxxxxxx.dkr.ecr.ap-northeast-1.amazonaws.com
      - curl -sS -o kubectl https://s3.us-west-2.amazonaws.com/amazon-eks/1.29.0/2024-01-04/bin/linux/amd64/kubectl
      - chmod +x ./kubectl 
      - export PATH=$PWD/:$PATH
  pre_build:
    commands:
      - TAG="$(date +%Y-%m-%d.%H.%M.%S)"
      - export KUBECONFIG=$HOME/.kube/config
  build:
    commands:
      - aws eks update-kubeconfig --name my-eks-cluster --region ap-northeast-1
      - mvn clean install
      - cp target/aws-code-pipeline*.jar .
      - docker build -t aws-code-pipeline:$TAG .
      - docker tag aws-code-pipeline:$TAG xxxxxxxxxxx.dkr.ecr.ap-northeast-1.amazonaws.com/demo-ecr-repo:$TAG
  post_build:
    commands:
      - docker push xxxxxxxxx.dkr.ecr.ap-northeast-1.amazonaws.com/demo-ecr-repo:$TAG
      - sed -i "s/TAG_VERSION/$TAG/g" deployment.yaml
      - kubectl apply -f deployment.yaml
      - kubectl rollout restart -f deployment.yaml
      - kubectl apply -f service.yaml
      - SERVICE_URL=$(kubectl get service aws-code-pipeline -o jsonpath='{.status.loadBalancer.ingress[].hostname}')
      - sed -i "s/CLUSTER_URL/$SERVICE_URL/g" test.sh

artifacts:
  files:
    - test.sh
    - test_stage.yml
  discard-paths: yes